--[[--------------------

 * Author: 闪电黑客

 * 日期: 2021/12/20 18:45:09

 * 最后日期: 2021/12/20 18:45:09

 * 最后修改: 闪电黑客

 * 描述:  

    LuaMono对象池建造者
    新建C#的LuaMono对象池，给其组装Lua的函数事件

--]] --------------------
using "LuaMonoObjectItem"

---@class LuaMonoObjectPoolBuilder  Mono对象池建造者
---表需要继承LuaMonoObjectItem
---@field ObjectRecycle function ObjectRecycle() 回收自己
---@field ObjectOnNew function ObjectOnNew() 新建后
---@field ObjectOnDestroy function ObjectOnDestroy() 回收销毁后
---@field ObjectOnGet function ObjectOnGet() 获取后
---@field ObjectOnRecycle function ObjectOnRecycle() 被回收后
---绑定到MonoBehaviour的委托方法：
---@field MonoStart function MonoStart()
---@field MonoOnDestroy function MonoOnDestroy()
--- ------------------
---@field MonoUpdate function MonoUpdate()
---@field MonoLateUpdate function MonoLateUpdate()
---@field MonoFixedUpdate function MonoFixedUpdate()
--- ------------------
---@field MonoOnEnable function MonoOnEnable
---@field MonoOnDisable function MonoOnDisable
--- ------------------
---@field MonoOnCollisionEnter function MonoOnCollisionEnter(collision)
---@field MonoOnCollisionStay function MonoOnCollisionStay(collision)
---@field MonoOnCollisionExit function MonoOnCollisionExit(collision)
---@field MonoOnCollisionEnter2D function MonoOnCollisionEnter2D(collision2D)
---@field MonoOnCollisionStay2D function MonoOnCollisionStay2D(collision2D)
---@field MonoOnCollisionExit2D function MonoOnCollisionExit2D(collision2D)
--- ------------------
---@field MonoOnTriggerEnter function MonoOnTriggerEnter(collider)
---@field MonoOnTriggerStay function MonoOnTriggerStay(collider)
---@field MonoOnTriggerExit function MonoOnTriggerExit(collider)
---@field MonoOnTriggerEnter2D function MonoOnTriggerEnter2D(collider2D)
---@field MonoOnTriggerStay2D function MonoOnTriggerStay2D(collider2D)
---@field MonoOnTriggerExit2D function MonoOnTriggerExit2D(collider2D)
--- ------------------
---@field MonoOnApplicationQuit function MonoOnApplicationQuit()
---@field MonoOnApplicationFocus function MonoOnApplicationFocus(bit)
---@field MonoOnApplicationPause function MonoOnApplicationPause(bit)
--- ------------------
LuaMonoObjectPoolBuilder = {}

--- 新建池
function LuaMonoObjectPoolBuilder.Construct(table)
    return LuaMonoObjectPoolBuilder.Construct(table, nil)
end


--- 新建池
function LuaMonoObjectPoolBuilder.Construct(table, prefab)
    local newPool = LuaMonoObjectPool(table, prefab)
    -- 组装对象池
    newPool.NewObject = LuaMonoObjectPoolBuilder.ObjectNew
    newPool.DestroyObject = LuaMonoObjectPoolBuilder.ObjectDestroy
    newPool.objectOnNew = LuaMonoObjectPoolBuilder.ObjectOnNew
    newPool.objectOnGet = LuaMonoObjectPoolBuilder.ObjectOnGet
    newPool.objectOnRecycle = LuaMonoObjectPoolBuilder.ObjectOnRecycle
    newPool.objectOnDestroy = LuaMonoObjectPoolBuilder.ObjectOnDestroy
    return newPool
end


--- 新建对象的方法
function LuaMonoObjectPoolBuilder.ObjectNew(pool)
    local gameObj = nil

    if pool.prefab == nil then
        gameObj = GameObject(pool.objName)
    else
        gameObj = Instantiate(pool.prefab)
        gameObj.name = pool.objName
    end

    local monoObj = gameObj:SetComponent(typeof(LuaMonoObject))

    local table = pool.table:New()
    monoObj.table = table
    table.selfPool = pool
    table.mono = monoObj
    table.gameObject = gameObj
    table.transform = gameObj.transform
    --
    LuaMonoObjectPoolBuilder.MonoRegisterEvent(monoObj)

    return monoObj
end


function LuaMonoObjectPoolBuilder.MonoRegisterEvent(monoObj)
    monoObj.MonoStart = monoObj.table.MonoStart
    monoObj.MonoOnDestroy = monoObj.table.MonoOnDestroy

    monoObj.MonoUpdate = monoObj.table.MonoUpdate
    monoObj.MonoLateUpdate = monoObj.table.MonoLateUpdate
    monoObj.MonoFixedUpdate = monoObj.table.MonoFixedUpdate

    monoObj.MonoOnEnable = monoObj.table.MonoOnEnable
    monoObj.MonoOnDisable = monoObj.table.MonoOnDisable

    monoObj.MonoOnCollisionEnter = monoObj.table.MonoOnCollisionEnter
    monoObj.MonoOnCollisionStay = monoObj.table.MonoOnCollisionStay
    monoObj.MonoOnCollisionExit = monoObj.table.MonoOnCollisionExit
    monoObj.MonoOnCollisionEnter2D = monoObj.table.MonoOnCollisionEnter2D
    monoObj.MonoOnCollisionStay2D = monoObj.table.MonoOnCollisionStay2D
    monoObj.MonoOnCollisionExit2D = monoObj.table.MonoOnCollisionExit2D

    monoObj.MonoOnTriggerEnter = monoObj.table.MonoOnTriggerEnter
    monoObj.MonoOnTriggerStay = monoObj.table.MonoOnTriggerStay
    monoObj.MonoOnTriggerExit = monoObj.table.MonoOnTriggerExit
    monoObj.MonoOnTriggerEnter2D = monoObj.table.MonoOnTriggerEnter2D
    monoObj.MonoOnTriggerStay2D = monoObj.table.MonoOnTriggerStay2D
    monoObj.MonoOnTriggerExit2D = monoObj.table.MonoOnTriggerExit2D

    monoObj.MonoOnApplicationQuit = monoObj.table.MonoOnApplicationQuit
    monoObj.MonoOnApplicationFocus = monoObj.table.MonoOnApplicationFocus
    monoObj.MonoOnApplicationPause = monoObj.table.MonoOnApplicationPause
end


function LuaMonoObjectPoolBuilder.ObjectDestroy(obj)
    obj.table = nil
    GameObject.Destroy(obj.gameObject)
end


function LuaMonoObjectPoolBuilder.ObjectOnNew(obj)
    obj.transform:SetParent(obj.table.selfPool.poolTransform)
    obj.gameObject:SetActive(false)
    obj.table:ObjectOnNew()
end


function LuaMonoObjectPoolBuilder.ObjectOnGet(obj)
    obj.gameObject:SetActive(true)
    obj.table:ObjectOnGet()
end


function LuaMonoObjectPoolBuilder.ObjectOnRecycle(obj)
    obj.gameObject:SetActive(false)
    obj.transform:SetParent(obj.table.selfPool.poolTransform)
    obj.table:ObjectOnRecycle()
end


function LuaMonoObjectPoolBuilder.ObjectOnDestroy(obj)
    obj.table:ObjectOnDestroy()
    obj.table = nil
end

